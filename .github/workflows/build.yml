---
name: build
on:
  - push
  - pull_request_target

jobs:

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ibiqlik/action-yamllint@v3

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run lint

  typescript-compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run build

  unused-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npx depcheck --ignores depcheck,@types/jest

  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - name: Read SSH KEY file
        uses: juliangruber/read-file-action@v1
        id: sshDeployKey
        with:
          path: .ssh/deploy-read-token
      - name: Read Known hosts file
        uses: juliangruber/read-file-action@v1
        id: sshKnownHosts
        with:
          path: .ssh/known_hosts
      - uses: shimataro/ssh-key-action@v2
        with:
          # Deploy token with just read permissions
          key: ${{ steps.sshDeployKey.outputs.content }}
          known_hosts: ${{ steps.sshKnownHosts.outputs.content }}
      - name: Run Tests
        run: |
          eval $(ssh-agent -s)
          ssh-add
          FORCE_COLOR=1 npx jest --coverage --testTimeout 90000
      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # if: github.event_name != 'pull_request'


  code-ql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
